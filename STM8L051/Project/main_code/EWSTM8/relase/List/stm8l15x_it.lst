###############################################################################
#
# IAR C/C++ Compiler V2.10.2.149 for STM8                 09/Jun/2015  11:00:16
# Copyright 2010-2014 IAR Systems AB.
#
#    Source file  =  
#        C:\Users\THINK\Documents\GitHub\FTT-TwoLine-Operater\STM8L051\Project\main_code\stm8l15x_it.c
#    Command line =  
#        C:\Users\THINK\Documents\GitHub\FTT-TwoLine-Operater\STM8L051\Project\main_code\stm8l15x_it.c
#        -e -Ohz --debug --code_model medium --data_model medium -o
#        C:\Users\THINK\Documents\GitHub\FTT-TwoLine-Operater\STM8L051\Project\main_code\EWSTM8\relase\Obj\
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\stm8\LIB\dlstm8mmn.h" -D USE_STM8L1526_EVAL -D STM8L05X_LD_VL -lC
#        C:\Users\THINK\Documents\GitHub\FTT-TwoLine-Operater\STM8L051\Project\main_code\EWSTM8\relase\List\
#        -lA
#        C:\Users\THINK\Documents\GitHub\FTT-TwoLine-Operater\STM8L051\Project\main_code\EWSTM8\relase\List\
#        -I
#        C:\Users\THINK\Documents\GitHub\FTT-TwoLine-Operater\STM8L051\Project\main_code\EWSTM8\..\
#        -I
#        C:\Users\THINK\Documents\GitHub\FTT-TwoLine-Operater\STM8L051\Project\main_code\EWSTM8\..\..\..\Libraries\STM8L15x_StdPeriph_Driver\inc\
#        -I
#        C:\Users\THINK\Documents\GitHub\FTT-TwoLine-Operater\STM8L051\Project\main_code\EWSTM8\..\..\..\Utilities\STM8_EVAL\
#        -I
#        C:\Users\THINK\Documents\GitHub\FTT-TwoLine-Operater\STM8L051\Project\main_code\EWSTM8\..\..\..\Utilities\STM8_EVAL\STM8L1526_EVAL\
#        -I
#        C:\Users\THINK\Documents\GitHub\FTT-TwoLine-Operater\STM8L051\Project\main_code\EWSTM8\..\..\..\Utilities\STM8_EVAL\Common\
#        -I
#        C:\Users\THINK\Documents\GitHub\FTT-TwoLine-Operater\STM8L051\Project\main_code\EWSTM8\..\..\..\Utilities\Misc\
#        --require_prototypes --vregs 16
#    List file    =  
#        C:\Users\THINK\Documents\GitHub\FTT-TwoLine-Operater\STM8L051\Project\main_code\EWSTM8\relase\List\stm8l15x_it.lst
#    Object file  =  
#        C:\Users\THINK\Documents\GitHub\FTT-TwoLine-Operater\STM8L051\Project\main_code\EWSTM8\relase\Obj\stm8l15x_it.o
#
###############################################################################

C:\Users\THINK\Documents\GitHub\FTT-TwoLine-Operater\STM8L051\Project\main_code\stm8l15x_it.c
      1          #include "stm8l15x_it.h"
      2          #ifdef _COSMIC_
      3          INTERRUPT_HANDLER(NonHandledInterrupt,0)
      4          {
      5          }
      6          #endif
      7          
      8          
      9          extern  unsigned char   receiveflag;
     10          extern  unsigned char   Key1_InterruptPushflag;        //按键1 中断标识
     11          extern  unsigned char   Key2_InterruptPushflag;        //按键2 中断标识
     12          extern  unsigned long   key1_time_count;               //按键1 计时
     13          extern  unsigned long   key2_time_count;
     14          extern  unsigned long   timer2_delay_time;
     15          extern  unsigned char   learn_mode;
     16          extern  unsigned long   auto_exit_time;               //自动退出学习模式 计时
     17          extern  unsigned char   led_blink_time;               //LED闪烁计时
     18          extern  unsigned char   LearnModeWaitForConfirm;
     19          extern  unsigned long   WaitForConfirm_time;
     20          extern  unsigned long   timer3_Operate_time;
     21          extern  unsigned char   Radio_Can_Operated ;
     22          extern  unsigned char   check_key1;
     23          extern  unsigned char   check_key2;
     24          extern  unsigned char   timer2_need_delay;

   \                                 In section .near.bss, align 1
     25          unsigned long           ten_second = 0;
   \                     ten_second:
   \   000000              DS8 4
     26          extern  unsigned char   rtc_flag;
     27          
     28          
     29          /* RTC定时唤醒 */

   \                                 In section .far_func.text, align 1
   \                     ?Subroutine2:
   \   000000 8D ......    CALLF     L:?load32_0x_l0
   \   000004 BE ..        LDW       X, S:?w0
   \   000006 A3 0000      CPW       X, #0x0
   \   000009 87           RETF

   \                                 In section .far_func.text, align 1
   \                     ?Subroutine0:
   \   000000 8D ......    CALLF     L:?load32_l0_0x
   \   000004 AC ......    JPF       L:?inc32_l0_l0

   \                                 In section .far_func.text, align 1
   \                     ?Subroutine1:
   \   000000 8A           PUSH      CC
   \   000001 84           POP       A
   \   000002 A4 BF        AND       A, #0xbf
   \   000004 88           PUSH      A
   \   000005 86           POP       CC
   \   000006 87           RETF

   \                                 In section .far_func.text, align 1
     30          INTERRUPT_HANDLER(RTC_CSSLSE_IRQHandler,4)
     31          {
   \                     RTC_CSSLSE_IRQHandler:
   \                     _interrupt_6:
   \   000000 8D ......    CALLF     ?Subroutine1
   \                     ??CrossCallReturnLabel_13:
   \   000004 8D ......    CALLF     L:?push_l0
   \   000008 8D ......    CALLF     L:?push_l1
     32              ten_second++;
   \   00000C AE ....      LDW       X, #ten_second
   \   00000F 8D ......    CALLF     ?Subroutine0
   \                     ??CrossCallReturnLabel_6:
   \   000013 AE ....      LDW       X, #ten_second
   \   000016 8D ......    CALLF     ?Subroutine2
     33              if(ten_second > 1)
   \                     ??CrossCallReturnLabel_16:
   \   00001A 26 05        JRNE      L:??RTC_CSSLSE_IRQHandler_0
   \   00001C BE ..        LDW       X, S:?w1
   \   00001E A3 0002      CPW       X, #0x2
   \                     ??RTC_CSSLSE_IRQHandler_0:
   \   000021 25 0B        JRC       L:??RTC_CSSLSE_IRQHandler_1
     34              {
     35                 ten_second = 0;
   \   000023 5F           CLRW      X
   \   000024 CF ....      LDW       L:ten_second, X
   \   000027 CF ....      LDW       L:ten_second + 2, X
     36                 rtc_flag = 1;
   \   00002A 35 01 ....   MOV       L:rtc_flag, #0x1
     37              }
     38              RTC_ClearITPendingBit(RTC_IT_WUT);
   \                     ??RTC_CSSLSE_IRQHandler_1:
   \   00002E AE 0040      LDW       X, #0x40
   \   000031 8D ......    CALLF     RTC_ClearITPendingBit
     39          }
   \   000035 8D ......    CALLF     L:?pop_l1
   \   000039 8D ......    CALLF     L:?pop_l0
   \   00003D 80           IRET
     40          
     41          /* 接收报文IO中断 */

   \                                 In section .far_func.text, align 1
     42          INTERRUPT_HANDLER(EXTI3_IRQHandler,11)
     43          {   
   \                     EXTI3_IRQHandler:
   \                     _interrupt_13:
   \   000000 8D ......    CALLF     ?Subroutine1
   \                     ??CrossCallReturnLabel_12:
   \   000004 8D ......    CALLF     L:?push_l0
   \   000008 8D ......    CALLF     L:?push_l1
     44            //   ten_second = 0;
     45               receiveflag = 1; 
   \   00000C 35 01 ....   MOV       L:receiveflag, #0x1
     46               TIM3_Cmd(ENABLE);
   \   000010 A6 01        LD        A, #0x1
   \   000012 8D ......    CALLF     TIM3_Cmd
     47               EXTI_ClearITPendingBit(EXTI_IT_Pin3);
   \   000016 AE 0008      LDW       X, #0x8
   \   000019 8D ......    CALLF     EXTI_ClearITPendingBit
     48          }
   \   00001D 8D ......    CALLF     L:?pop_l1
   \   000021 8D ......    CALLF     L:?pop_l0
   \   000025 80           IRET
     49          
     50          /* 按键1 中断 */

   \                                 In section .far_func.text, align 1
     51          INTERRUPT_HANDLER(EXTI0_IRQHandler,8)
     52          {   
   \                     EXTI0_IRQHandler:
   \                     _interrupt_10:
   \   000000 8D ......    CALLF     ?Subroutine1
   \                     ??CrossCallReturnLabel_11:
   \   000004 8D ......    CALLF     L:?push_l0
   \   000008 8D ......    CALLF     L:?push_l1
     53              key1_time_count = 0;
   \   00000C 5F           CLRW      X
   \   00000D CF ....      LDW       L:key1_time_count, X
   \   000010 CF ....      LDW       L:key1_time_count + 2, X
     54              auto_exit_time  = 0;
   \   000013 8D ......    CALLF     ?Subroutine3
     55              TIM4_Cmd(ENABLE);      
     56              Key1_InterruptPushflag = 1;
   \                     ??CrossCallReturnLabel_17:
   \   000017 35 01 ....   MOV       L:Key1_InterruptPushflag, #0x1
     57              EXTI_ClearITPendingBit(EXTI_IT_Pin0);
   \   00001B 5F           CLRW      X
   \   00001C 5C           INCW      X
   \   00001D 8D ......    CALLF     EXTI_ClearITPendingBit
     58          }
   \   000021 8D ......    CALLF     L:?pop_l1
   \   000025 8D ......    CALLF     L:?pop_l0
   \   000029 80           IRET

   \                                 In section .far_func.text, align 1
   \                     ?Subroutine3:
   \   000000 CF ....      LDW       L:auto_exit_time, X
   \   000003 CF ....      LDW       L:auto_exit_time + 2, X
   \   000006 A6 01        LD        A, #0x1
   \   000008 AC ......    JPF       TIM4_Cmd
     59          
     60          /* 按键2 中断  */  

   \                                 In section .far_func.text, align 1
     61          INTERRUPT_HANDLER(EXTI7_IRQHandler,15)
     62          {
   \                     EXTI7_IRQHandler:
   \                     _interrupt_17:
   \   000000 8D ......    CALLF     ?Subroutine1
   \                     ??CrossCallReturnLabel_10:
   \   000004 8D ......    CALLF     L:?push_l0
   \   000008 8D ......    CALLF     L:?push_l1
     63              key2_time_count = 0;
   \   00000C 5F           CLRW      X
   \   00000D CF ....      LDW       L:key2_time_count, X
   \   000010 CF ....      LDW       L:key2_time_count + 2, X
     64              auto_exit_time  = 0;
   \   000013 8D ......    CALLF     ?Subroutine3
     65              TIM4_Cmd(ENABLE);      
     66              Key2_InterruptPushflag = 1;
   \                     ??CrossCallReturnLabel_18:
   \   000017 35 01 ....   MOV       L:Key2_InterruptPushflag, #0x1
     67              EXTI_ClearITPendingBit(EXTI_IT_Pin7);
   \   00001B AE 0080      LDW       X, #0x80
   \   00001E 8D ......    CALLF     EXTI_ClearITPendingBit
     68          }
   \   000022 8D ......    CALLF     L:?pop_l1
   \   000026 8D ......    CALLF     L:?pop_l0
   \   00002A 80           IRET
     69          
     70          /* 
     71          Time4定时器中断 
     72          按键计时
     73          */

   \                                 In section .far_func.text, align 1
     74          INTERRUPT_HANDLER(TIM4_UPD_OVF_TRG_IRQHandler, 25)
     75          {         
   \                     TIM4_UPD_OVF_TRG_IRQHandler:
   \                     _interrupt_27:
   \   000000 8D ......    CALLF     ?Subroutine1
   \                     ??CrossCallReturnLabel_9:
   \   000004 8D ......    CALLF     L:?push_l0
   \   000008 8D ......    CALLF     L:?push_l1
     76              if(Key1_InterruptPushflag == 1)
   \   00000C C6 ....      LD        A, L:Key1_InterruptPushflag
   \   00000F A1 01        CP        A, #0x1
   \   000011 26 1F        JRNE      L:??TIM4_UPD_OVF_TRG_IRQHandler_0
     77              { 
     78                  check_key1 = 1;
   \   000013 35 01 ....   MOV       L:check_key1, #0x1
     79                  if(GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_0) == 0)
   \   000017 A6 01        LD        A, #0x1
   \   000019 AE 5005      LDW       X, #0x5005
   \   00001C 8D ......    CALLF     GPIO_ReadInputDataBit
   \   000020 A1 00        CP        A, #0x0
   \   000022 26 0E        JRNE      L:??TIM4_UPD_OVF_TRG_IRQHandler_0
     80                  { key1_time_count++; }      
   \   000024 AE ....      LDW       X, #key1_time_count
   \   000027 8D ......    CALLF     ?Subroutine0
     81              }
   \                     ??CrossCallReturnLabel_2:
   \   00002B AE ....      LDW       X, #key1_time_count
   \   00002E 8D ......    CALLF     L:?load32_0x_l0
     82              if(Key2_InterruptPushflag == 1)
   \                     ??TIM4_UPD_OVF_TRG_IRQHandler_0:
   \   000032 C6 ....      LD        A, L:Key2_InterruptPushflag
   \   000035 A1 01        CP        A, #0x1
   \   000037 26 1F        JRNE      L:??TIM4_UPD_OVF_TRG_IRQHandler_1
     83              {      
     84                  check_key2 = 1;
   \   000039 35 01 ....   MOV       L:check_key2, #0x1
     85                  if(GPIO_ReadInputDataBit(GPIOC,GPIO_Pin_6) == 0)
   \   00003D A6 40        LD        A, #0x40
   \   00003F AE 500A      LDW       X, #0x500a
   \   000042 8D ......    CALLF     GPIO_ReadInputDataBit
   \   000046 A1 00        CP        A, #0x0
   \   000048 26 0E        JRNE      L:??TIM4_UPD_OVF_TRG_IRQHandler_1
     86                  { key2_time_count++; }    
   \   00004A AE ....      LDW       X, #key2_time_count
   \   00004D 8D ......    CALLF     ?Subroutine0
     87              }
   \                     ??CrossCallReturnLabel_3:
   \   000051 AE ....      LDW       X, #key2_time_count
   \   000054 8D ......    CALLF     L:?load32_0x_l0
     88                          
     89              if(learn_mode == 0x11)
   \                     ??TIM4_UPD_OVF_TRG_IRQHandler_1:
   \   000058 C6 ....      LD        A, L:learn_mode
   \   00005B A1 11        CP        A, #0x11
   \   00005D 26 15        JRNE      L:??TIM4_UPD_OVF_TRG_IRQHandler_2
     90              {        
     91                  auto_exit_time++;       
   \   00005F AE ....      LDW       X, #auto_exit_time
   \   000062 8D ......    CALLF     ?Subroutine0
   \                     ??CrossCallReturnLabel_4:
   \   000066 AE ....      LDW       X, #auto_exit_time
   \   000069 8D ......    CALLF     L:?load32_0x_l0
     92                  led_blink_time++;        
   \   00006D C6 ....      LD        A, L:led_blink_time
   \   000070 4C           INC       A
   \   000071 C7 ....      LD        L:led_blink_time, A
     93              }        
     94              if(LearnModeWaitForConfirm == 0x11)
   \                     ??TIM4_UPD_OVF_TRG_IRQHandler_2:
   \   000074 C6 ....      LD        A, L:LearnModeWaitForConfirm
   \   000077 A1 11        CP        A, #0x11
   \   000079 26 15        JRNE      L:??TIM4_UPD_OVF_TRG_IRQHandler_3
     95              {
     96                  auto_exit_time = 0;
   \   00007B 5F           CLRW      X
   \   00007C CF ....      LDW       L:auto_exit_time, X
   \   00007F CF ....      LDW       L:auto_exit_time + 2, X
     97                  WaitForConfirm_time++;
   \   000082 AE ....      LDW       X, #WaitForConfirm_time
   \   000085 8D ......    CALLF     ?Subroutine0
     98              }   
   \                     ??CrossCallReturnLabel_5:
   \   000089 AE ....      LDW       X, #WaitForConfirm_time
   \   00008C 8D ......    CALLF     L:?load32_0x_l0
     99              
    100              if(key1_time_count > 4000)
   \                     ??TIM4_UPD_OVF_TRG_IRQHandler_3:
   \   000090 AE ....      LDW       X, #key1_time_count
   \   000093 8D ......    CALLF     L:?load32_l0_0x
   \   000097 BE ..        LDW       X, S:?w0
   \   000099 A3 0000      CPW       X, #0x0
   \   00009C 26 05        JRNE      L:??TIM4_UPD_OVF_TRG_IRQHandler_4
   \   00009E BE ..        LDW       X, S:?w1
   \   0000A0 A3 0FA1      CPW       X, #0xfa1
   \                     ??TIM4_UPD_OVF_TRG_IRQHandler_4:
   \   0000A3 25 07        JRC       L:??TIM4_UPD_OVF_TRG_IRQHandler_5
    101              {key1_time_count = 0;}
   \   0000A5 5F           CLRW      X
   \   0000A6 CF ....      LDW       L:key1_time_count, X
   \   0000A9 CF ....      LDW       L:key1_time_count + 2, X
    102              if(key2_time_count > 4000)
   \                     ??TIM4_UPD_OVF_TRG_IRQHandler_5:
   \   0000AC AE ....      LDW       X, #key2_time_count
   \   0000AF 8D ......    CALLF     L:?load32_l0_0x
   \   0000B3 BE ..        LDW       X, S:?w0
   \   0000B5 A3 0000      CPW       X, #0x0
   \   0000B8 26 05        JRNE      L:??TIM4_UPD_OVF_TRG_IRQHandler_6
   \   0000BA BE ..        LDW       X, S:?w1
   \   0000BC A3 0FA1      CPW       X, #0xfa1
   \                     ??TIM4_UPD_OVF_TRG_IRQHandler_6:
   \   0000BF 25 07        JRC       L:??TIM4_UPD_OVF_TRG_IRQHandler_7
    103              {key2_time_count = 0;}
   \   0000C1 5F           CLRW      X
   \   0000C2 CF ....      LDW       L:key2_time_count, X
   \   0000C5 CF ....      LDW       L:key2_time_count + 2, X
    104              
    105              TIM4_ClearITPendingBit(TIM4_IT_Update);
   \                     ??TIM4_UPD_OVF_TRG_IRQHandler_7:
   \   0000C8 A6 01        LD        A, #0x1
   \   0000CA 8D ......    CALLF     TIM4_ClearITPendingBit
    106          }
   \   0000CE 8D ......    CALLF     L:?pop_l1
   \   0000D2 8D ......    CALLF     L:?pop_l0
   \   0000D6 80           IRET
    107          
    108          /* 
    109          Time2定时器中断
    110          延时计时
    111          */

   \                                 In section .far_func.text, align 1
    112          INTERRUPT_HANDLER(TIM2_UPD_OVF_TRG_BRK_USART2_TX_IRQHandler, 19)
    113          {      
   \                     TIM2_UPD_OVF_TRG_BRK_USART2_TX_IRQHandler:
   \                     _interrupt_21:
   \   000000 8D ......    CALLF     ?Subroutine1
   \                     ??CrossCallReturnLabel_8:
   \   000004 8D ......    CALLF     L:?push_l0
   \   000008 8D ......    CALLF     L:?push_l1
    114               if(timer2_need_delay)
   \   00000C C6 ....      LD        A, L:timer2_need_delay
   \   00000F 27 1E        JREQ      L:??TIM2_UPD_OVF_TRG_BRK_USART2_TX_IRQHandler_0
    115               {
    116                   timer2_delay_time ++;  
   \   000011 AE ....      LDW       X, #timer2_delay_time
   \   000014 8D ......    CALLF     ?Subroutine0
   \                     ??CrossCallReturnLabel_1:
   \   000018 AE ....      LDW       X, #timer2_delay_time
   \   00001B 8D ......    CALLF     ?Subroutine2
    117                   if(timer2_delay_time > 4000)
   \                     ??CrossCallReturnLabel_15:
   \   00001F 26 05        JRNE      L:??TIM2_UPD_OVF_TRG_BRK_USART2_TX_IRQHandler_1
   \   000021 BE ..        LDW       X, S:?w1
   \   000023 A3 0FA1      CPW       X, #0xfa1
   \                     ??TIM2_UPD_OVF_TRG_BRK_USART2_TX_IRQHandler_1:
   \   000026 25 07        JRC       L:??TIM2_UPD_OVF_TRG_BRK_USART2_TX_IRQHandler_0
    118                   { timer2_delay_time = 0; }         
   \   000028 5F           CLRW      X
   \   000029 CF ....      LDW       L:timer2_delay_time, X
   \   00002C CF ....      LDW       L:timer2_delay_time + 2, X
    119               }
    120              
    121               TIM2_ClearITPendingBit(TIM2_IT_Update);
   \                     ??TIM2_UPD_OVF_TRG_BRK_USART2_TX_IRQHandler_0:
   \   00002F A6 01        LD        A, #0x1
   \   000031 8D ......    CALLF     TIM2_ClearITPendingBit
    122          }
   \   000035 8D ......    CALLF     L:?pop_l1
   \   000039 8D ......    CALLF     L:?pop_l0
   \   00003D 80           IRET
    123          
    124          
    125          /* 
    126          Time3定时器中断 
    127          接收报文时开启 用以实现多个报文接收时只操作一次
    128          */

   \                                 In section .far_func.text, align 1
    129          INTERRUPT_HANDLER(TIM3_UPD_OVF_TRG_BRK_USART3_TX_IRQHandler, 21)
    130          {
   \                     TIM3_UPD_OVF_TRG_BRK_USART3_TX_IRQHandler:
   \                     _interrupt_23:
   \   000000 8D ......    CALLF     ?Subroutine1
   \                     ??CrossCallReturnLabel_7:
   \   000004 8D ......    CALLF     L:?push_l0
   \   000008 8D ......    CALLF     L:?push_l1
    131               timer3_Operate_time ++;
   \   00000C AE ....      LDW       X, #timer3_Operate_time
   \   00000F 8D ......    CALLF     ?Subroutine0
   \                     ??CrossCallReturnLabel_0:
   \   000013 AE ....      LDW       X, #timer3_Operate_time
   \   000016 8D ......    CALLF     ?Subroutine2
    132               
    133               if(timer3_Operate_time > 15)
   \                     ??CrossCallReturnLabel_14:
   \   00001A 26 05        JRNE      L:??TIM3_UPD_OVF_TRG_BRK_USART3_TX_IRQHandler_0
   \   00001C BE ..        LDW       X, S:?w1
   \   00001E A3 0010      CPW       X, #0x10
   \                     ??TIM3_UPD_OVF_TRG_BRK_USART3_TX_IRQHandler_0:
   \   000021 25 10        JRC       L:??TIM3_UPD_OVF_TRG_BRK_USART3_TX_IRQHandler_1
    134               {
    135                   timer3_Operate_time = 0;
   \   000023 5F           CLRW      X
   \   000024 CF ....      LDW       L:timer3_Operate_time, X
   \   000027 CF ....      LDW       L:timer3_Operate_time + 2, X
    136                   Radio_Can_Operated = 1;     //恢复可操作状态
   \   00002A 35 01 ....   MOV       L:Radio_Can_Operated, #0x1
    137                   TIM3_Cmd(DISABLE);  
   \   00002E 4F           CLR       A
   \   00002F 8D ......    CALLF     TIM3_Cmd
    138               }       
    139               TIM3_ClearITPendingBit(TIM3_IT_Update);
   \                     ??TIM3_UPD_OVF_TRG_BRK_USART3_TX_IRQHandler_1:
   \   000033 A6 01        LD        A, #0x1
   \   000035 8D ......    CALLF     TIM3_ClearITPendingBit
    140          }
   \   000039 8D ......    CALLF     L:?pop_l1
   \   00003D 8D ......    CALLF     L:?pop_l0
   \   000041 80           IRET
    141          
    142          
    143          
    144          
    145          
    146          
    147          
    148          

   Section sizes:

   Bytes  Function/Label
   -----  --------------
       8  ?Subroutine0
       7  ?Subroutine1
      10  ?Subroutine2
      12  ?Subroutine3
      42  EXTI0_IRQHandler
      38  EXTI3_IRQHandler
      43  EXTI7_IRQHandler
      62  RTC_CSSLSE_IRQHandler
      62  TIM2_UPD_OVF_TRG_BRK_USART2_TX_IRQHandler
      66  TIM3_UPD_OVF_TRG_BRK_USART3_TX_IRQHandler
     215  TIM4_UPD_OVF_TRG_IRQHandler
       4  ten_second

 
 565 bytes in section .far_func.text
   4 bytes in section .near.bss
 
 565 bytes of CODE memory
   4 bytes of DATA memory

Errors: none
Warnings: none
