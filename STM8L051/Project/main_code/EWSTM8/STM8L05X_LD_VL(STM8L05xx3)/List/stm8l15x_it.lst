###############################################################################
#
# IAR C/C++ Compiler V2.10.2.149 for STM8                 18/Jul/2015  12:44:46
# Copyright 2010-2014 IAR Systems AB.
#
#    Source file  =  
#        C:\Users\THINK\Documents\GitHub\One_Line_OPT\STM8L051\Project\main_code\stm8l15x_it.c
#    Command line =  
#        C:\Users\THINK\Documents\GitHub\One_Line_OPT\STM8L051\Project\main_code\stm8l15x_it.c
#        -e -Ohz --debug --code_model small --data_model medium -o
#        "C:\Users\THINK\Documents\GitHub\One_Line_OPT\STM8L051\Project\main_code\EWSTM8\STM8L05X_LD_VL(STM8L05xx3)\Obj\"
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\stm8\LIB\dlstm8smn.h" -D USE_STM8L1526_EVAL -D STM8L05X_LD_VL -lC
#        "C:\Users\THINK\Documents\GitHub\One_Line_OPT\STM8L051\Project\main_code\EWSTM8\STM8L05X_LD_VL(STM8L05xx3)\List\"
#        -lA
#        "C:\Users\THINK\Documents\GitHub\One_Line_OPT\STM8L051\Project\main_code\EWSTM8\STM8L05X_LD_VL(STM8L05xx3)\List\"
#        -I
#        C:\Users\THINK\Documents\GitHub\One_Line_OPT\STM8L051\Project\main_code\EWSTM8\..\
#        -I
#        C:\Users\THINK\Documents\GitHub\One_Line_OPT\STM8L051\Project\main_code\EWSTM8\..\..\..\Libraries\STM8L15x_StdPeriph_Driver\inc\
#        -I
#        C:\Users\THINK\Documents\GitHub\One_Line_OPT\STM8L051\Project\main_code\EWSTM8\..\..\..\Utilities\STM8_EVAL\
#        -I
#        C:\Users\THINK\Documents\GitHub\One_Line_OPT\STM8L051\Project\main_code\EWSTM8\..\..\..\Utilities\STM8_EVAL\STM8L1526_EVAL\
#        -I
#        C:\Users\THINK\Documents\GitHub\One_Line_OPT\STM8L051\Project\main_code\EWSTM8\..\..\..\Utilities\STM8_EVAL\Common\
#        -I
#        C:\Users\THINK\Documents\GitHub\One_Line_OPT\STM8L051\Project\main_code\EWSTM8\..\..\..\Utilities\Misc\
#        --require_prototypes --vregs 16
#    List file    =  
#        C:\Users\THINK\Documents\GitHub\One_Line_OPT\STM8L051\Project\main_code\EWSTM8\STM8L05X_LD_VL(STM8L05xx3)\List\stm8l15x_it.lst
#    Object file  =  
#        C:\Users\THINK\Documents\GitHub\One_Line_OPT\STM8L051\Project\main_code\EWSTM8\STM8L05X_LD_VL(STM8L05xx3)\Obj\stm8l15x_it.o
#
###############################################################################

C:\Users\THINK\Documents\GitHub\One_Line_OPT\STM8L051\Project\main_code\stm8l15x_it.c
      1          #include "stm8l15x_it.h"
      2          #include "cc1101.h"
      3          
      4          #ifdef _COSMIC_
      5          INTERRUPT_HANDLER(NonHandledInterrupt,0)
      6          {
      7          }
      8          #endif
      9          
     10          
     11          extern  unsigned char   receiveflag;
     12          extern  unsigned char   Key1_InterruptPushflag;        //按键1 中断标识
     13          extern  unsigned long   key1_time_count;               //按键1 计时
     14          extern  unsigned long   timer2_delay_time;
     15          extern  unsigned char   learn_mode;
     16          extern  unsigned long   auto_exit_time;               //自动退出学习模式 计时
     17          extern  unsigned char   led_blink_time;               //LED闪烁计时
     18          extern  unsigned char   LearnModeWaitForConfirm;
     19          extern  unsigned long   WaitForConfirm_time;
     20          extern  unsigned long   timer3_Operate_time;
     21          extern  unsigned char   Radio_Can_Operated ;
     22          extern  unsigned char   check_key1;
     23          

   \                                 In section .near.bss, align 1
     24          unsigned long           ten_second = 0;
   \                     ten_second:
   \   000000              DS8 4
     25          extern  unsigned char   clear_pll_clock ;
     26          extern  unsigned char   key_pressed;   //0:按键没松口    1：按键松开了
     27          
     28          
     29          /* RTC定时唤醒 */

   \                                 In section .near_func.text, align 1
   \                     ?Subroutine0:
   \   000000 CD ....      CALL      L:?load32_l0_0x
   \   000003 CC ....      JP        L:?inc32_l0_l0

   \                                 In section .near_func.text, align 1
   \                     ?Subroutine1:
   \   000000 8A           PUSH      CC
   \   000001 84           POP       A
   \   000002 A4 BF        AND       A, #0xbf
   \   000004 88           PUSH      A
   \   000005 86           POP       CC
   \   000006 81           RET

   \                                 In section .near_func.text, align 1
     30          INTERRUPT_HANDLER(RTC_CSSLSE_IRQHandler,4)
     31          {
   \                     RTC_CSSLSE_IRQHandler:
   \                     _interrupt_6:
   \   000000 CD ....      CALL      L:?Subroutine1
   \                     ??CrossCallReturnLabel_11:
   \   000003 CD ....      CALL      L:?push_l0
   \   000006 CD ....      CALL      L:?push_l1
     32              ten_second++;
   \   000009 AE ....      LDW       X, #ten_second
   \   00000C CD ....      CALL      L:?Subroutine0
   \                     ??CrossCallReturnLabel_5:
   \   00000F AE ....      LDW       X, #ten_second
   \   000012 CD ....      CALL      L:?load32_0x_l0
     33              if(ten_second > 0)
   \   000015 BE ..        LDW       X, S:?w0
   \   000017 26 02        JRNE      L:??RTC_CSSLSE_IRQHandler_0
   \   000019 BE ..        LDW       X, S:?w1
   \                     ??RTC_CSSLSE_IRQHandler_0:
   \   00001B 27 0B        JREQ      L:??RTC_CSSLSE_IRQHandler_1
     34              {
     35                 ten_second = 0;
   \   00001D 5F           CLRW      X
   \   00001E CF ....      LDW       L:ten_second, X
   \   000021 CF ....      LDW       L:ten_second + 2, X
     36                 clear_pll_clock = 1;
   \   000024 35 01 ....   MOV       L:clear_pll_clock, #0x1
     37              }
     38              RTC_ClearITPendingBit(RTC_IT_WUT);
   \                     ??RTC_CSSLSE_IRQHandler_1:
   \   000028 AE 0040      LDW       X, #0x40
   \   00002B CD ....      CALL      L:RTC_ClearITPendingBit
     39          }
   \   00002E CD ....      CALL      L:?pop_l1
   \   000031 CD ....      CALL      L:?pop_l0
   \   000034 80           IRET
     40          
     41          /* 接收报文IO中断 */

   \                                 In section .near_func.text, align 1
     42          INTERRUPT_HANDLER(EXTI2_IRQHandler,10)
     43          {   
   \                     EXTI2_IRQHandler:
   \                     _interrupt_12:
   \   000000 CD ....      CALL      L:?Subroutine1
   \                     ??CrossCallReturnLabel_10:
   \   000003 CD ....      CALL      L:?push_l0
   \   000006 CD ....      CALL      L:?push_l1
     44               ten_second = 0;
   \   000009 5F           CLRW      X
   \   00000A CF ....      LDW       L:ten_second, X
   \   00000D CF ....      LDW       L:ten_second + 2, X
     45               receiveflag = 1; 
   \   000010 35 01 ....   MOV       L:receiveflag, #0x1
     46               TIM3_Cmd(ENABLE);
   \   000014 A6 01        LD        A, #0x1
   \   000016 CD ....      CALL      L:TIM3_Cmd
     47               EXTI_ClearITPendingBit(EXTI_IT_Pin2);
   \   000019 AE 0004      LDW       X, #0x4
   \   00001C CD ....      CALL      L:EXTI_ClearITPendingBit
     48          }
   \   00001F CD ....      CALL      L:?pop_l1
   \   000022 CD ....      CALL      L:?pop_l0
   \   000025 80           IRET
     49          
     50          
     51          /* 按键1 中断 */

   \                                 In section .near_func.text, align 1
     52          INTERRUPT_HANDLER(EXTI6_IRQHandler,14)
     53          {   
   \                     EXTI6_IRQHandler:
   \                     _interrupt_16:
   \   000000 CD ....      CALL      L:?Subroutine1
   \                     ??CrossCallReturnLabel_9:
   \   000003 CD ....      CALL      L:?push_l0
   \   000006 CD ....      CALL      L:?push_l1
     54              key_pressed = 0;
   \   000009 725F ....    CLR       L:key_pressed
     55              key1_time_count = 0;
   \   00000D 5F           CLRW      X
   \   00000E CF ....      LDW       L:key1_time_count, X
   \   000011 CF ....      LDW       L:key1_time_count + 2, X
     56              auto_exit_time  = 0;
   \   000014 CF ....      LDW       L:auto_exit_time, X
   \   000017 CF ....      LDW       L:auto_exit_time + 2, X
     57              TIM4_Cmd(ENABLE);      
   \   00001A A6 01        LD        A, #0x1
   \   00001C CD ....      CALL      L:TIM4_Cmd
     58              Key1_InterruptPushflag = 1;
   \   00001F 35 01 ....   MOV       L:Key1_InterruptPushflag, #0x1
     59              EXTI_ClearITPendingBit(EXTI_IT_Pin6);
   \   000023 AE 0040      LDW       X, #0x40
   \   000026 CD ....      CALL      L:EXTI_ClearITPendingBit
     60          }
   \   000029 CD ....      CALL      L:?pop_l1
   \   00002C CD ....      CALL      L:?pop_l0
   \   00002F 80           IRET
     61          
     62          /* 
     63          Time4定时器中断 
     64          按键计时
     65          */

   \                                 In section .near_func.text, align 1
     66          INTERRUPT_HANDLER(TIM4_UPD_OVF_TRG_IRQHandler, 25)
     67          {         
   \                     TIM4_UPD_OVF_TRG_IRQHandler:
   \                     _interrupt_27:
   \   000000 CD ....      CALL      L:?Subroutine1
   \                     ??CrossCallReturnLabel_8:
   \   000003 CD ....      CALL      L:?push_l0
   \   000006 CD ....      CALL      L:?push_l1
     68              if(Key1_InterruptPushflag == 1)
   \   000009 C6 ....      LD        A, L:Key1_InterruptPushflag
   \   00000C A1 01        CP        A, #0x1
   \   00000E 26 1C        JRNE      L:??TIM4_UPD_OVF_TRG_IRQHandler_0
     69              { 
     70                  check_key1 = 1;
   \   000010 35 01 ....   MOV       L:check_key1, #0x1
     71                  if(GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_0) == 0)
   \   000014 A6 01        LD        A, #0x1
   \   000016 AE 5005      LDW       X, #0x5005
   \   000019 CD ....      CALL      L:GPIO_ReadInputDataBit
   \   00001C A1 00        CP        A, #0x0
   \   00001E 26 0C        JRNE      L:??TIM4_UPD_OVF_TRG_IRQHandler_0
     72                  { key1_time_count++; }      
   \   000020 AE ....      LDW       X, #key1_time_count
   \   000023 CD ....      CALL      L:?Subroutine0
     73              }
   \                     ??CrossCallReturnLabel_2:
   \   000026 AE ....      LDW       X, #key1_time_count
   \   000029 CD ....      CALL      L:?load32_0x_l0
     74                     
     75              if(learn_mode == 0x11)
   \                     ??TIM4_UPD_OVF_TRG_IRQHandler_0:
   \   00002C C6 ....      LD        A, L:learn_mode
   \   00002F A1 11        CP        A, #0x11
   \   000031 26 13        JRNE      L:??TIM4_UPD_OVF_TRG_IRQHandler_1
     76              {        
     77                  auto_exit_time++;       
   \   000033 AE ....      LDW       X, #auto_exit_time
   \   000036 CD ....      CALL      L:?Subroutine0
   \                     ??CrossCallReturnLabel_3:
   \   000039 AE ....      LDW       X, #auto_exit_time
   \   00003C CD ....      CALL      L:?load32_0x_l0
     78                  led_blink_time++;        
   \   00003F C6 ....      LD        A, L:led_blink_time
   \   000042 4C           INC       A
   \   000043 C7 ....      LD        L:led_blink_time, A
     79              }        
     80              if(LearnModeWaitForConfirm == 0x11)
   \                     ??TIM4_UPD_OVF_TRG_IRQHandler_1:
   \   000046 C6 ....      LD        A, L:LearnModeWaitForConfirm
   \   000049 A1 11        CP        A, #0x11
   \   00004B 26 13        JRNE      L:??TIM4_UPD_OVF_TRG_IRQHandler_2
     81              {
     82                  auto_exit_time = 0;
   \   00004D 5F           CLRW      X
   \   00004E CF ....      LDW       L:auto_exit_time, X
   \   000051 CF ....      LDW       L:auto_exit_time + 2, X
     83                  WaitForConfirm_time++;
   \   000054 AE ....      LDW       X, #WaitForConfirm_time
   \   000057 CD ....      CALL      L:?Subroutine0
     84              }   
   \                     ??CrossCallReturnLabel_4:
   \   00005A AE ....      LDW       X, #WaitForConfirm_time
   \   00005D CD ....      CALL      L:?load32_0x_l0
     85              
     86              if(key1_time_count > 4000)
   \                     ??TIM4_UPD_OVF_TRG_IRQHandler_2:
   \   000060 AE ....      LDW       X, #key1_time_count
   \   000063 CD ....      CALL      L:?load32_l0_0x
   \   000066 BE ..        LDW       X, S:?w0
   \   000068 A3 0000      CPW       X, #0x0
   \   00006B 26 05        JRNE      L:??TIM4_UPD_OVF_TRG_IRQHandler_3
   \   00006D BE ..        LDW       X, S:?w1
   \   00006F A3 0FA1      CPW       X, #0xfa1
   \                     ??TIM4_UPD_OVF_TRG_IRQHandler_3:
   \   000072 25 07        JRC       L:??TIM4_UPD_OVF_TRG_IRQHandler_4
     87              {key1_time_count = 0;}
   \   000074 5F           CLRW      X
   \   000075 CF ....      LDW       L:key1_time_count, X
   \   000078 CF ....      LDW       L:key1_time_count + 2, X
     88           
     89              TIM4_ClearITPendingBit(TIM4_IT_Update);
   \                     ??TIM4_UPD_OVF_TRG_IRQHandler_4:
   \   00007B A6 01        LD        A, #0x1
   \   00007D CD ....      CALL      L:TIM4_ClearITPendingBit
     90          }
   \   000080 CD ....      CALL      L:?pop_l1
   \   000083 CD ....      CALL      L:?pop_l0
   \   000086 80           IRET
     91          
     92          /* 
     93          Time2定时器中断
     94          延时计时
     95          */

   \                                 In section .near_func.text, align 1
     96          INTERRUPT_HANDLER(TIM2_UPD_OVF_TRG_BRK_USART2_TX_IRQHandler, 19)
     97          {      
   \                     TIM2_UPD_OVF_TRG_BRK_USART2_TX_IRQHandler:
   \                     _interrupt_21:
   \   000000 CD ....      CALL      L:?Subroutine1
   \                     ??CrossCallReturnLabel_7:
   \   000003 CD ....      CALL      L:?push_l0
   \   000006 CD ....      CALL      L:?push_l1
     98               timer2_delay_time ++;  
   \   000009 AE ....      LDW       X, #timer2_delay_time
   \   00000C CD ....      CALL      L:?Subroutine0
   \                     ??CrossCallReturnLabel_1:
   \   00000F AE ....      LDW       X, #timer2_delay_time
   \   000012 CD ....      CALL      L:?Subroutine2
     99               if(timer2_delay_time > 4000)
   \                     ??CrossCallReturnLabel_13:
   \   000015 26 05        JRNE      L:??TIM2_UPD_OVF_TRG_BRK_USART2_TX_IRQHandler_0
   \   000017 BE ..        LDW       X, S:?w1
   \   000019 A3 0FA1      CPW       X, #0xfa1
   \                     ??TIM2_UPD_OVF_TRG_BRK_USART2_TX_IRQHandler_0:
   \   00001C 25 07        JRC       L:??TIM2_UPD_OVF_TRG_BRK_USART2_TX_IRQHandler_1
    100               { timer2_delay_time = 0; }         
   \   00001E 5F           CLRW      X
   \   00001F CF ....      LDW       L:timer2_delay_time, X
   \   000022 CF ....      LDW       L:timer2_delay_time + 2, X
    101               
    102               TIM2_ClearITPendingBit(TIM2_IT_Update);
   \                     ??TIM2_UPD_OVF_TRG_BRK_USART2_TX_IRQHandler_1:
   \   000025 A6 01        LD        A, #0x1
   \   000027 CD ....      CALL      L:TIM2_ClearITPendingBit
    103          }
   \   00002A CD ....      CALL      L:?pop_l1
   \   00002D CD ....      CALL      L:?pop_l0
   \   000030 80           IRET

   \                                 In section .near_func.text, align 1
   \                     ?Subroutine2:
   \   000000 CD ....      CALL      L:?load32_0x_l0
   \   000003 BE ..        LDW       X, S:?w0
   \   000005 A3 0000      CPW       X, #0x0
   \   000008 81           RET
    104          
    105          
    106          /* 
    107          Time3定时器中断 
    108          接收报文时开启 用以实现多个报文接收时只操作一次
    109          */

   \                                 In section .near_func.text, align 1
    110          INTERRUPT_HANDLER(TIM3_UPD_OVF_TRG_BRK_USART3_TX_IRQHandler, 21)
    111          {
   \                     TIM3_UPD_OVF_TRG_BRK_USART3_TX_IRQHandler:
   \                     _interrupt_23:
   \   000000 CD ....      CALL      L:?Subroutine1
   \                     ??CrossCallReturnLabel_6:
   \   000003 CD ....      CALL      L:?push_l0
   \   000006 CD ....      CALL      L:?push_l1
    112               timer3_Operate_time ++;
   \   000009 AE ....      LDW       X, #timer3_Operate_time
   \   00000C CD ....      CALL      L:?Subroutine0
   \                     ??CrossCallReturnLabel_0:
   \   00000F AE ....      LDW       X, #timer3_Operate_time
   \   000012 CD ....      CALL      L:?Subroutine2
    113               
    114               if(timer3_Operate_time > 11)
   \                     ??CrossCallReturnLabel_12:
   \   000015 26 05        JRNE      L:??TIM3_UPD_OVF_TRG_BRK_USART3_TX_IRQHandler_0
   \   000017 BE ..        LDW       X, S:?w1
   \   000019 A3 000C      CPW       X, #0xc
   \                     ??TIM3_UPD_OVF_TRG_BRK_USART3_TX_IRQHandler_0:
   \   00001C 25 13        JRC       L:??TIM3_UPD_OVF_TRG_BRK_USART3_TX_IRQHandler_1
    115               {
    116                   timer3_Operate_time = 0;
   \   00001E 5F           CLRW      X
   \   00001F CF ....      LDW       L:timer3_Operate_time, X
   \   000022 CF ....      LDW       L:timer3_Operate_time + 2, X
    117                   Radio_Can_Operated = 1;     //恢复可操作状态        
   \   000025 35 01 ....   MOV       L:Radio_Can_Operated, #0x1
    118                   clear_pll_clock = 1;
   \   000029 35 01 ....   MOV       L:clear_pll_clock, #0x1
    119                   TIM3_Cmd(DISABLE);  
   \   00002D 4F           CLR       A
   \   00002E CD ....      CALL      L:TIM3_Cmd
    120               }       
    121               TIM3_ClearITPendingBit(TIM3_IT_Update);
   \                     ??TIM3_UPD_OVF_TRG_BRK_USART3_TX_IRQHandler_1:
   \   000031 A6 01        LD        A, #0x1
   \   000033 CD ....      CALL      L:TIM3_ClearITPendingBit
    122          }
   \   000036 CD ....      CALL      L:?pop_l1
   \   000039 CD ....      CALL      L:?pop_l0
   \   00003C 80           IRET
    123          
    124          
    125          
    126          
    127          
    128          
    129          
    130          

   Section sizes:

   Bytes  Function/Label
   -----  --------------
       6  ?Subroutine0
       7  ?Subroutine1
       9  ?Subroutine2
      38  EXTI2_IRQHandler
      48  EXTI6_IRQHandler
      53  RTC_CSSLSE_IRQHandler
      49  TIM2_UPD_OVF_TRG_BRK_USART2_TX_IRQHandler
      61  TIM3_UPD_OVF_TRG_BRK_USART3_TX_IRQHandler
     135  TIM4_UPD_OVF_TRG_IRQHandler
       4  ten_second

 
   4 bytes in section .near.bss
 406 bytes in section .near_func.text
 
 406 bytes of CODE memory
   4 bytes of DATA memory

Errors: none
Warnings: none
